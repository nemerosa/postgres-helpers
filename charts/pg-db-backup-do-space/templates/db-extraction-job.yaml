apiVersion: batch/v1
kind: CronJob
metadata:
  name: "{{ .Release.Name }}-pg-db-backup-do-space"
spec:
  schedule: {{ .Values.backup.schedule | quote }}
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
            - name: extraction
              image: "postgres:{{ .Values.database.version }}"
              imagePullPolicy: IfNotPresent
              command: [ "sh", "-c" ]
              args:
                - |

                  pg_dump \
                    --username {{ .Values.auth.username }} \
                    --no-password \
                    --dbname {{ .Values.database.name }} \
                    --host {{ .Values.connection.host }} \
                    --port {{ .Values.connection.port }} \
                    --file dump.sql

                  apt-get update
                  apt-get install -y s3cmd

                  s3cmd \
                    --access_key=${DO_SPACE_ACCESS_KEY} \
                    --secret_key=${DO_SPACE_SECRET_KEY} \
                    --host={{ .Values.digitalocean.space.region }}.digitaloceanspaces.com \
                    --host-bucket='%(bucket)s.{{ .Values.digitalocean.space.region }}.digitaloceanspaces.com' \
                    put \
                    dump.sql \
                    s3://{{ .Values.digitalocean.space.bucket }}/{{ .Values.digitalocean.space.path.root }}/{{ or .Values.backup.name .Values.database.name }}/dump-$(date +%Y%m%d%H%M%S).sql
              env:
                {{- if .Values.connection.ssl }}
                - name: PGSSLMODE
                  value: {{ .Values.connection.ssl | quote }}
                {{- end }}
                - name: PGPASSWORD
                  value: {{ .Values.auth.password | quote }}
                {{- if .Values.digitalocean.space.secretName }}
                - name: DO_SPACE_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.digitalocean.space.secretName | quote }}
                      key: accessKey
                - name: DO_SPACE_SECRET_KEY
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.digitalocean.space.secretName | quote }}
                      key: secretKey
                {{- else if .Values.digitalocean.space.externalSecret.enabled }}
                - name: DO_SPACE_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.digitalocean.space.externalSecret.secret.name | quote }}
                      key: accessKey
                - name: DO_SPACE_SECRET_KEY
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.digitalocean.space.externalSecret.secret.name | quote }}
                      key: secretKey
                {{- else }}
                - name: DO_SPACE_ACCESS_KEY
                  value: {{ .Values.digitalocean.space.accessKey | quote }}
                - name: DO_SPACE_SECRET_KEY
                  value: {{ .Values.digitalocean.space.secretKey | quote }}
                {{- end }}
